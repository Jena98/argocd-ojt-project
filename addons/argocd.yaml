apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: argocd
spec:
  generators:
    - git:
        repoURL: https://github.com/jenana-devops/argocd-ojt-project.git
        revision: HEAD
        files:
          - path: "env/addons/ops/*.json"

  template:
    metadata:
      name: "argocd"
      labels:
        group: addons
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: notification
        
    spec:
      project: addons
      destination:
        name: "{{cluster.name}}"
        namespace: argocd
      source:
        repoURL: https://argoproj.github.io/argo-helm
        targetRevision: "4.0.0"
        chart: argo-cd
        helm:
          values: |-
            fullnameOverride: argocd

            controller:
              resources:
                requests:
                  cpu: 250m
                  memory: 512Mi
                limits:
                  cpu: 500m
                  memory: 1Gi

            server:
              replicas: 2

              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: 200m
                  memory: 512Mi 

              service:
                type: LoadBalancer
                annotations:
                  service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
                  service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
                  #service.beta.kubernetes.io/aws-load-balancer-ssl-cert: ""
                  #service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"    
                  external-dns.alpha.kubernetes.io/hostname: "{{argocd.hostname}}"
         
              extraArgs:
                - --insecure

              config:
                url: https://{{argocd.hostname}}

                dex.config: |
                  connectors:
                  - type: github
                    id: github
                    name: github
                    config:
                      clientID: $dex.github.clientId
                      clientSecret: $dex.github.clientSecret
                      teamNameField: slug
                      orgs:
                        - name: jenana-devops

              rbacConfig:
                policy.default: "role:readonly"
                policy.csv: |
                  g, jenana-devops:psa, role:admin

              additionalProjects:
                - name: apps
                  namespace: argocd
                  description: apps project
                  sourceRepos:
                    - "*"
                  destinations:
                    - namespace: "*"
                      server: "*"
                  clusterResourceWhitelist:
                    - group: "*"
                      kind: "*"
                      
                - name: addons
                  namespace: argocd
                  description: addons project
                  sourceRepos:
                    - "*"
                  destinations:
                    - namespace: "*"
                      server: "*"
                  clusterResourceWhitelist:
                    - group: "*"
                      kind: "*"          

            repoServer:
              replicas: 2

              resources:
                requests:
                  cpu: 250m
                  memory: 512Mi
                limits:
                  cpu: 500m
                  memory: 1Gi

            dex:
              resources:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 100m
                  memory: 256Mi

            redis:
              resources:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 100m
                  memory: 256Mi

            configs:
              secret:
                createSecret: false

              repositories:
                - name: argocd-ojt-project
                  type: git
                  url: https://github.com/jenana-devops/argocd-ojt-project.git

            extraObjects:
              - apiVersion: kubernetes-client.io/v1
                kind: ExternalSecret
                metadata:
                  name: argocd-secret
                spec:
                  backendType: systemManager
                  data:
                    - key: /k8s/common/argocd-password
                      name: admin.password
                    - key: /k8s/jenana-devops/argocd-github-id
                      name: dex.github.clientId
                    - key: /k8s/jenana-devops/argocd-github-secret
                      name: dex.github.clientSecret
                    - key: /k8s/common/argocd-server-secret
                      name: server.secretkey                      

              - apiVersion: kubernetes-client.io/v1
                kind: ExternalSecret
                metadata:
                  name: argocd-notifications-secret
                spec:
                  backendType: systemManager
                  data:
                    - key: /k8s/common/argocd-noti-token
                      name: slack-token 

            notifications:        
              enabled: true
              argocdUrl: https://{{argocd.hostname}}

              resources:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 100m
                  memory: 256Mi

              secret:
                create: false

              templates: 
                template.app-deployed: |
                  email:
                    subject: New version of an application {{.app.metadata.name}} is up and running.
                  message: |
                    {{if eq .serviceType "slack"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.
                  slack:
                    attachments: |
                      [{
                        "title": "{{ .app.metadata.name}}",
                        "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                        "color": "#18be52",
                        "fields": [
                        {
                          "title": "Sync Status",
                          "value": "{{.app.status.sync.status}}",
                          "short": true
                        },
                        {
                          "title": "Repository",
                          "value": "{{.app.spec.source.repoURL}}",
                          "short": true
                        },
                        {
                          "title": "Revision",
                          "value": "{{.app.status.sync.revision}}",
                          "short": true
                        }
                        {{range $index, $c := .app.status.conditions}}
                        {{if not $index}},{{end}}
                        {{if $index}},{{end}}
                        {
                          "title": "{{$c.type}}",
                          "value": "{{$c.message}}",
                          "short": true
                        }
                        {{end}}
                        ]
                      }]
                template.app-health-degraded: |
                  email:
                    subject: Application {{.app.metadata.name}} has degraded.
                  message: |
                    {{if eq .serviceType "slack"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.
                    Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
                  slack:
                    attachments: |-
                      [{
                        "title": "{{ .app.metadata.name}}",
                        "title_link": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                        "color": "#f4c030",
                        "fields": [
                        {
                          "title": "Sync Status",
                          "value": "{{.app.status.sync.status}}",
                          "short": true
                        },
                        {
                          "title": "Repository",
                          "value": "{{.app.spec.source.repoURL}}",
                          "short": true
                        }
                        {{range $index, $c := .app.status.conditions}}
                        {{if not $index}},{{end}}
                        {{if $index}},{{end}}
                        {
                          "title": "{{$c.type}}",
                          "value": "{{$c.message}}",
                          "short": true
                        }
                        {{end}}
                        ]
                      }]
                template.app-sync-failed: |
                  email:
                    subject: Failed to sync application {{.app.metadata.name}}.
                  message: |
                    {{if eq .serviceType "slack"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}
                    Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
                  slack:
                    attachments: |-
                      [{
                        "title": "{{ .app.metadata.name}}",
                        "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                        "color": "#E96D76",
                        "fields": [
                        {
                          "title": "Sync Status",
                          "value": "{{.app.status.sync.status}}",
                          "short": true
                        },
                        {
                          "title": "Repository",
                          "value": "{{.app.spec.source.repoURL}}",
                          "short": true
                        }
                        {{range $index, $c := .app.status.conditions}}
                        {{if not $index}},{{end}}
                        {{if $index}},{{end}}
                        {
                          "title": "{{$c.type}}",
                          "value": "{{$c.message}}",
                          "short": true
                        }
                        {{end}}
                        ]
                      }]
                template.app-sync-running: |
                  email:
                    subject: Start syncing application {{.app.metadata.name}}.
                  message: |
                    The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.
                    Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
                  slack:
                    attachments: |-
                      [{
                        "title": "{{ .app.metadata.name}}",
                        "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                        "color": "#0DADEA",
                        "fields": [
                        {
                          "title": "Sync Status",
                          "value": "{{.app.status.sync.status}}",
                          "short": true
                        },
                        {
                          "title": "Repository",
                          "value": "{{.app.spec.source.repoURL}}",
                          "short": true
                        }
                        {{range $index, $c := .app.status.conditions}}
                        {{if not $index}},{{end}}
                        {{if $index}},{{end}}
                        {
                          "title": "{{$c.type}}",
                          "value": "{{$c.message}}",
                          "short": true
                        }
                        {{end}}
                        ]
                      }]
                template.app-sync-status-unknown: |
                  email:
                    subject: Application {{.app.metadata.name}} sync status is 'Unknown'
                  message: |
                    {{if eq .serviceType "slack"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.
                    Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
                    {{if ne .serviceType "slack"}}
                    {{range $c := .app.status.conditions}}
                        * {{$c.message}}
                    {{end}}
                    {{end}}
                  slack:
                    attachments: |-
                      [{
                        "title": "{{ .app.metadata.name}}",
                        "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                        "color": "#E96D76",
                        "fields": [
                        {
                          "title": "Sync Status",
                          "value": "{{.app.status.sync.status}}",
                          "short": true
                        },
                        {
                          "title": "Repository",
                          "value": "{{.app.spec.source.repoURL}}",
                          "short": true
                        }
                        {{range $index, $c := .app.status.conditions}}
                        {{if not $index}},{{end}}
                        {{if $index}},{{end}}
                        {
                          "title": "{{$c.type}}",
                          "value": "{{$c.message}}",
                          "short": true
                        }
                        {{end}}
                        ]
                      }]
                template.app-sync-succeeded: |
                  email:
                    subject: Application {{.app.metadata.name}} has been successfully synced.
                  message: |
                    {{if eq .serviceType "slack"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.
                    Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
                  slack:
                    attachments: "[{\n  \"title\": \"{{ .app.metadata.name}}\",\n  \"title_link\":\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\",\n  \"color\": \"#18be52\",\n  \"fields\": [\n  {\n    \"title\": \"Sync Status\",\n    \"value\": \"{{.app.status.sync.status}}\",\n    \"short\": true\n  },\n  {\n    \"title\": \"Repository\",\n    \"value\": \"{{.app.spec.source.repoURL}}\",\n    \"short\": true\n  }\n  {{range $index, $c := .app.status.conditions}}\n  {{if not $index}},{{end}}\n  {{if $index}},{{end}}\n  {\n    \"title\": \"{{$c.type}}\",\n    \"value\": \"{{$c.message}}\",\n    \"short\": true\n  }\n  {{end}}\n  ]\n}]    "

              triggers: 
                trigger.on-deployed: |
                  - description: Application is synced and healthy. Triggered once per commit.
                    oncePer: app.status.sync.revision
                    send:
                    - app-deployed
                    when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
                trigger.on-health-degraded: |
                  - description: Application has degraded
                    send:
                    - app-health-degraded
                    when: app.status.health.status == 'Degraded'
                trigger.on-sync-failed: |
                  - description: Application syncing has failed
                    send:
                    - app-sync-failed
                    when: app.status.operationState.phase in ['Error', 'Failed']
                trigger.on-sync-running: |
                  - description: Application is being synced
                    send:
                    - app-sync-running
                    when: app.status.operationState.phase in ['Running']
                trigger.on-sync-status-unknown: |
                  - description: Application status is 'Unknown'
                    send:
                    - app-sync-status-unknown
                    when: app.status.sync.status == 'Unknown'
                trigger.on-sync-succeeded: |
                  - description: Application syncing has succeeded
                    send:
                    - app-sync-succeeded
                    when: app.status.operationState.phase in ['Succeeded']
                defaultTriggers: |
                  - on-sync-status-unknown

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true